@compiler<cpp><[{
#include <cstdint>
#include <iostream>
#include <vector>

namespace Runtime {
    using Int8=int8_t;
    using Int16=int16_t;
    using Int32=int32_t;
    using Int64=int64_t;

    using UInt8=uint8_t;
    using UInt16=uint16_t;
    using UInt32=uint32_t;
    using UInt64=uint64_t;

    using Float32=float;
    using Float64=double;

    using Char=char;
    using Void=void;
    using String=std::string;

    #define TRUE__ true
    #define FALSE__ false

    void print(String msg){
        std::cout << msg;
    }

    template<typename T>
    void printv(std::vector<T> vec){
        int pos=0;
        for(T& val : vec){
            std::cout << "element " << pos++ << ":" << val << '\n';
        }
    }

    void println(String msg){
        std::cout << msg << '\n';
    }

}

}]>

@compiler<python3><[{
# this should be omited from the compiled form the output
# as the only valid target lanugage is cpp
}]>


module Runtime {

    def struct Bool{}
    def struct True{
        def op bool(){return TRUE__;}
        def op String(){return "True";}
    }
    def struct False{
        def op bool(){return FALSE__;}
        def op String(){return "False";}
    }

}

@compiler<cpp><[{
namespace Runtime {
#undef TRUE__
#undef FALSE__
}
}]>